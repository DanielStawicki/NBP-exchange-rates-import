<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/22/2018 9:18:05 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC00065"
  DTS:CreatorName="DAC\das-ext.admin"
  DTS:DTSID="{7516BF25-DC64-4425-969E-91404C4D54B1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3006.16"
  DTS:LocaleID="1030"
  DTS:ObjectName="Import JSON process in Csharp"
  DTS:PackageType="5"
  DTS:VersionBuild="43"
  DTS:VersionGUID="{DC12DFAF-D8C5-4CA9-888C-42C0C6C5DA93}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8DAB7AF5-DE34-4F37-9051-B58AD24A0B99}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::End_date]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="End_date">
      <DTS:VariableValue
        DTS:DataType="8">2018-02-22</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC23A0FA-9DA6-4486-BECE-C3C2541EAFFC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::Start_date]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Start_date">
      <DTS:VariableValue
        DTS:DataType="8">2018-02-01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C3A70A1-5E3A-4D64-9CAE-A6A3756F8CAA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="XML_value">
      <DTS:VariableValue
        DTS:DataType="8">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;ExchangeRatesSeries xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt; &lt;Table&gt;A&lt;/Table&gt; &lt;Currency&gt;euro&lt;/Currency&gt; &lt;Code&gt;EUR&lt;/Code&gt; &lt;Rates&gt; &lt;Rate&gt; &lt;No&gt;030/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-12&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1846&lt;/Mid&gt; &lt;/Rate&gt; &lt;Rate&gt; &lt;No&gt;031/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-13&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1764&lt;/Mid&gt; &lt;/Rate&gt; &lt;Rate&gt; &lt;No&gt;032/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-14&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1716&lt;/Mid&gt; &lt;/Rate&gt; &lt;Rate&gt; &lt;No&gt;033/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-15&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1530&lt;/Mid&gt; &lt;/Rate&gt; &lt;Rate&gt; &lt;No&gt;034/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-16&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1559&lt;/Mid&gt; &lt;/Rate&gt; &lt;Rate&gt; &lt;No&gt;035/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-19&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1467&lt;/Mid&gt; &lt;/Rate&gt; &lt;Rate&gt; &lt;No&gt;036/A/NBP/2018&lt;/No&gt; &lt;EffectiveDate&gt;2018-02-20&lt;/EffectiveDate&gt; &lt;Mid&gt;4.1472&lt;/Mid&gt; &lt;/Rate&gt; &lt;/Rates&gt; &lt;/ExchangeRatesSeries&gt;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import NBP JSON into tmp Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{32B18D6A-9CAB-4140-8D4B-0C2BBA5D9AA8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import NBP JSON into tmp Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SC Import NBP JSON data"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="36">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net;
using System.Text;
using System.IO;
using System.Runtime.Serialization.Json;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion
    
    public class Rate
    {
        public string no { get; set; }
        public string effectiveDate { get; set; }
        public string mid { get; set; }
    }
    public class NBP_JSON
    {
        public string table { get; set; }
        public string currency { get; set; }
        public string code { get; set; }
        public Rate[] rates { get; set; }
    }
    /// <summary>
    /// 
    /// </summary>
    CultureInfo provider;
    /// <summary>
    /// Object stores information how to parse decimal value
    /// </summary>
    NumberStyles style;
    /// <summary>
    /// String that stores JSON response
    /// </summary>
    string requestData = string.Empty;
    /// <summary>
    /// 
    /// </summary>
    NBP_JSON exchObj;
    DataContractJsonSerializer serializer;
    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        //Set the link to NBP API
        string API_link = string.Format("http://api.nbp.pl/api/exchangerates/rates/a/eur/{0}/{1}/?format=JSON", Variables.Startdate, Variables.Enddate);

        //Load the JSON response from API
        WebClient web = new WebClient();
        Stream stream = web.OpenRead(API_link);

        ////Deserialize JSON response to c# Object
        serializer = new DataContractJsonSerializer(typeof(NBP_JSON));
        exchObj = (NBP_JSON)serializer.ReadObject(stream);

        //Set Globalizatoin style
        style = NumberStyles.AllowDecimalPoint | NumberStyles.AllowThousands|NumberStyles.Any;
        provider = new CultureInfo("en-EN");
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        
        foreach (var rate in exchObj.rates)
        {
            NBPdataBuffer.AddRow();
            NBPdataBuffer.No = rate.no;
            NBPdataBuffer.EffectiveDate = DateTime.ParseExact(rate.effectiveDate, "yyyy-MM-dd", null);
            NBPdataBuffer.Mid = decimal.Parse(rate.mid, style, provider);
        }

        
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_270d2152aaea4ac69e49b8343498f245.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6CE8E452-E303-4986-90E8-122F71CDADF2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_270d2152aaea4ac69e49b8343498f245</RootNamespace>
    <AssemblyName>SC_270d2152aaea4ac69e49b8343498f245</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="packages.xsd">
      <SubType>Designer</SubType>
    </None>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class NBPdataBuffer: ScriptBuffer

{
    public NBPdataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String No
    {
        set
        {
            this[0] = value;
        }
    }
    public bool No_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime EffectiveDate
    {
        set
        {
            this[1] = value;
        }
    }
    public bool EffectiveDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Mid
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Mid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_270d2152aaea4ac69e49b8343498f245.Properties.Settings.get_Default():SC_270d2152aaea4ac69e49b8343498f245.Properties.Sett" +
    "ings")]

namespace SC_270d2152aaea4ac69e49b8343498f245.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public NBPdataBuffer NBPdataBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != NBPdataBuffer)
        {
            NBPdataBuffer.SetEndOfRowset();
            NBPdataBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"NBP_data"))
            {
                NBPdataBuffer = new NBPdataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Enddate
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["End_date"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Startdate
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Start_date"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_270d2152aaea4ac69e49b8343498f245</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_270d2152aaea4ac69e49b8343498f245</msb:DisplayName>
		<msb:ProjectId>{5C683217-1B66-440E-B595-E3E39097AADD}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_270d2152aaea4ac69e49b8343498f245.csproj"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="packages.xsd"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_270d2152aaea4ac69e49b8343498f245")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_270d2152aaea4ac69e49b8343498f245")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_270d2152aaea4ac69e49b8343498f245.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_270d2152aaea4ac69e49b8343498f245.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_270d2152aaea4ac69e49b8343498f245.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_270d2152aaea4ac69e49b8343498f245.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_270d2152aaea4ac69e49b8343498f245.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages xmlns="urn:packages">
  <package id="Newtonsoft.Json" version="11.0.1" targetFramework="net45" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
      targetNamespace="urn:packages" xmlns="urn:packages">
  <xs:element name="packages">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="package" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="id" type="xs:string" use="required" />
            <xs:attribute name="version" type="xs:string" use="required" />
            <xs:attribute name="targetFramework" type="xs:string" use="optional" />
            <xs:attribute name="allowedVersions" type="xs:string" use="optional" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_270d2152aaea4ac69e49b8343498f245.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
mCMAAAAAhgiYARQBFACgIwAAAACGCKIBEAAUAKkjAAAAAIYIhQkUARUAsSMAAAAAhgiSCRAAFQC6
IwAAAACGCIYBFAEWAMIjAAAAAIYIjwEQABYAyyMAAAAAhgj9BzEBFwDTIwAAAACGCAcINwEXAAcj
AAAAAIYY/gYGABgAAAABAIEGAAACABEIAAADABgGAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAAB
AGoEAAABAGoEAAABAFkIAAACAAsHAAADAEsIAAAEABgGAAABAOYIAAABAOYIAAABAGoEAAABAGoE
AAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoEAAABAGoECQD+BgEAEQD+BgYAGQD+BgoAKQD+
BhAAMQD+BhAAOQD+BhAAQQD+BhAASQD+BhAAUQD+BhAAWQD+BhAAYQD+BhAAaQD+BgYAmQD+BgYA
0QD+BgYA6QD+BhUAyQBTBAYA+QB1CCEAAQH+BgYAAQGbACgACQG+AS4AgQD+BjcAGQGHCD4AcQD+
BhAAyQBeBAYAuQB8CE0AwQBFAlcA+QCsCWIAoQD+BmUAoQAtBW8AoQAVBQEAKQH+BhAAoQB+CQYA
oQCdCAYAoQCgCHUAyQD+BgYAyQBnAH0AyQAlCIQAkQD+BgYAyQDaB4oAMQEkBZAAyQBpCZcAOQE6
CZ0ACQGfCaQA2QD+BqoA8QD+BgYALgALAGUBLgATAG4BLgAbAI0BLgAjAJYBLgArAL8BLgAzAL8B
LgA7AL8BLgBDAJYBLgBLAMUBLgBTAL8BLgBbANwBQwBjACYC4wBzACYCKQF7AI0BSQF7AI0BoQFr
ACYCwQFrACYC4QFrACYCAQJrACYCIQJrACYCQQJrACYCYQJrACYCgQJrACYC4ANrACYCAARrACYC
IARrACYCQARrACYCYARrACYCgARrACYCwARrACYC4ARrACYCAAVrACYCIAVrACYCQAVrACYCYAVr
ACYCgAVrACYCoAVrACYCGwBEAHkAAwABAAYABwAHAAkACAALAAkADAAKAA8AAADtBT4BAAALBUIB
AABPAkYBAADyBEIBAAC8AEsBAADjBEIBAACKAj4BAACWAj4BAACMBlABAAAlAlUBAACwCFoBAAAH
Bj4BAABzAj4BAADMAD4BAACmAT4BAACWCT4BAACTAT4BAAALCF8BAQAGAAMAAQAHAAUAAQAIAAcA
AQAJAAkAAQAKAAsAAQALAA0AAgAWAA8AAgAXABEAAgAZABMAAgAaABUAAQAbABUAAgAcABcAAgAf
ABkAAQAgABkAAgAhABsAAQAiABsAAgAjAB0AAQAkAB0AAgAmAB8AAQAnAB8AAgAoACEAAQApACEA
AgAqACMAAQArACMAAgAsACUAAQAtACUABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAAAAAA
ALIAkgAAAAAADgAAAAAAAAAAAAAAuwDwCAAAAAAEAAAAAAAAAAAAAACyAH4FAAAAAA4AAAAAAAAA
AAAAALsADQkAAAAABAAAAAAAAAAAAAAAsgA2BQAAAAAOAAAAAAAAAAAAAAC7ACIGAAAAAAAAAAAB
AAAAWQcAAAkAAgAKAAIAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRT
RXZhbHVhdG9yQ29udGV4dDEwMABTQ18yNzBkMjE1MmFhZWE0YWM2OWU0OWI4MzQzNDk4ZjI0NQA8
TW9kdWxlPgBHZXRPdXRwdXRJRABOQlBfSlNPTgBTeXN0ZW0uSU8AcmVxdWVzdERhdGEAbXNjb3Js
aWIAT3BlblJlYWQATWFya091dHB1dHNGaW5pc2hlZABzZXRfTWlkAGdldF9taWQAc2V0X21pZAA8
bWlkPmtfX0JhY2tpbmdGaWVsZAA8Y29kZT5rX19CYWNraW5nRmllbGQAPHRhYmxlPmtfX0JhY2tp
bmdGaWVsZAA8ZWZmZWN0aXZlRGF0ZT5rX19CYWNraW5nRmllbGQAPG5vPmtfX0JhY2tpbmdGaWVs
ZAA8cmF0ZXM+a19fQmFja2luZ0ZpZWxkADxjdXJyZW5jeT5rX19CYWNraW5nRmllbGQAZGVmYXVs
dEluc3RhbmNlAGdldF9jb2RlAHNldF9jb2RlAGdldF90YWJsZQBzZXRfdGFibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc3R5bGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGFyc2UAc2V0X0VmZmVjdGl2ZURhdGUAZ2V0
X2VmZmVjdGl2ZURhdGUAc2V0X2VmZmVjdGl2ZURhdGUAUmF0ZQBnZXRfRW5kZGF0ZQBnZXRfU3Rh
cnRkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAZXhjaE9iagBE
ZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18yNzBkMjE1MmFhZWE0YWM2OWU0OWI4MzQz
NDk4ZjI0NS5kbGwAc2V0X01pZF9Jc051bGwAc2V0X0VmZmVjdGl2ZURhdGVfSXNOdWxsAHNldF9O
b19Jc051bGwAU2V0TnVsbABTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNl
TWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uSnNvbgBzZXRfTm8A
Q3VsdHVyZUluZm8AZ2V0X25vAHNldF9ubwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAElGb3JtYXRQcm92aWRlcgBwcm92aWRlcgBOQlBk
YXRhQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBEYXRhQ29udHJhY3RKc29u
U2VyaWFsaXplcgBYbWxPYmplY3RTZXJpYWxpemVyAHNlcmlhbGl6ZXIALmN0b3IALmNjdG9yAE91
dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzI3MGQyMTUyYWFlYTRhYzY5ZTQ5YjgzNDM0OThmMjQ1LlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yNzBkMjE1MmFh
ZWE0YWM2OWU0OWI4MzQzNDk4ZjI0NS5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBO
dW1iZXJTdHlsZXMAZ2V0X3JhdGVzAHNldF9yYXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENy
ZWF0ZU5ld091dHB1dFJvd3MARm9ybWF0AFBhcnNlRXhhY3QAUmVhZE9iamVjdABTeXN0ZW0uTmV0
AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFdlYkNsaWVudABVc2VyQ29tcG9uZW50AFBhcmVu
dENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABHZXRWYWx1ZVdpdGhD
b250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFk
ZFJvdwBnZXRfY3VycmVuY3kAc2V0X2N1cnJlbmN5AGdldF9Bc3NlbWJseQBFbXB0eQAAAACAiWgA
dAB0AHAAOgAvAC8AYQBwAGkALgBuAGIAcAAuAHAAbAAvAGEAcABpAC8AZQB4AGMAaABhAG4AZwBl
AHIAYQB0AGUAcwAvAHIAYQB0AGUAcwAvAGEALwBlAHUAcgAvAHsAMAB9AC8AewAxAH0ALwA/AGYA
bwByAG0AYQB0AD0ASgBTAE8ATgAAC2UAbgAtAEUATgABFXkAeQB5AHkALQBNAE0ALQBkAGQAAYCb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTgBCAFAAXwBkAGEAdABh
AAARRQBuAGQAXwBkAGEAdABlAAAVUwB0AGEAcgB0AF8AZABhAHQAZQAAcVMAQwBfADIANwAwAGQA
MgAxADUAMgBhAGEAZQBhADQAYQBjADYAOQBlADQAOQBiADgAMwA0ADMANAA5ADgAZgAyADQANQAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAHmty7dRLEBPrBUTjJyj
+lMABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEFBwIOEkUGAAMODhwcBSABEkUOCAABEoCFEYCJ
BiABARKAhQUgARwSRQgHAx0SJAgSJAkAAxFdDg4SgJEKAAMRYQ4RPRKAkQIGDgkgAwESVR0IElkF
IAIBCBwDIAACAwcBCAYAAggSWQ4FIAEdCAgFIAASgJkGIAESgJ0cBQAAEoChBiABHBKApQUgABKA
qQcgAgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGET0DBhIoAwYSQQMGEhQDBhIYAwYSDAMG
EmUDBhJtAwYSIAQGHRIkBCABAQIFIAEBEV0FIAEBEWELIAQBCB0IHRJVElkFIAEBEmUDIAAOBAAA
Em0EAAASOQUAAQESOQQAABIgAwAAAQUgAB0SJAYgAQEdEiQDKAAOAygAAgQoABFdBCgAEWEECAAS
bQQIABI5BAgAEiAFKAAdEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NDXzI3MGQyMTUyYWFlYTRhYzY5ZTQ5YjgzNDM0OThmMjQ1AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
ADg8AAAAAAAAAAAAAFI8AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEPAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AMgA3ADAAZAAyADEANQAyAGEAYQBlAGEANABhAGMANgA5AGUANAA5AGIAOAAzADQAMwA0ADkA
OABmADIANAA1AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyADcAMABkADIAMQA1ADIA
YQBhAGUAYQA0AGEAYwA2ADkAZQA0ADkAYgA4ADMANAAzADQAOQA4AGYAMgA0ADUALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADIANwAwAGQA
MgAxADUAMgBhAGEAZQBhADQAYQBjADYAOQBlADQAOQBiADgAMwA0ADMANAA5ADgAZgAyADQANQAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAyADcAMABkADIA
MQA1ADIAYQBhAGUAYQA0AGEAYwA2ADkAZQA0ADkAYgA4ADMANAAzADQAOQA4AGYAMgA0ADUAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQ8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_270d2152aaea4ac69e49b8343498f245</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::End_date,User::Start_date</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">A3</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data]"
                  hasSideEffects="true"
                  name="NBP_data">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[No]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[No]"
                      name="No" />
                    <outputColumn
                      refId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[EffectiveDate]"
                      dataType="date"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[EffectiveDate]"
                      name="EffectiveDate" />
                    <outputColumn
                      refId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[Mid]"
                      dataType="decimal"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[Mid]"
                      name="Mid"
                      scale="4" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import NBP JSON into tmp Table\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Mid
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[0]);
        }
    }
    public bool Mid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Column
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_592b3a788e6c42af8a0ab52a530963df.Properties.Settings.get_Default():SC_592b3a788e6c42af8a0ab52a530963df.Properties.Sett" +
    "ings")]

namespace SC_592b3a788e6c42af8a0ab52a530963df.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_592b3a788e6c42af8a0ab52a530963df.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d393cab8-df6a-4c21-85cb-1904b6842139}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_592b3a788e6c42af8a0ab52a530963df</RootNamespace>
    <AssemblyName>SC_592b3a788e6c42af8a0ab52a530963df</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_592b3a788e6c42af8a0ab52a530963df" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_592b3a788e6c42af8a0ab52a530963df</msb:CodeName>
		<msb:DisplayName>SC_592b3a788e6c42af8a0ab52a530963df</msb:DisplayName>
		<msb:ProjectId>{61AADB7E-9A40-43ED-B8A8-398AF88F9630}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_592b3a788e6c42af8a0ab52a530963df.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_592b3a788e6c42af8a0ab52a530963df")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_592b3a788e6c42af8a0ab52a530963df")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_592b3a788e6c42af8a0ab52a530963df.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_592b3a788e6c42af8a0ab52a530963df.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_592b3a788e6c42af8a0ab52a530963df.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_592b3a788e6c42af8a0ab52a530963df.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_592b3a788e6c42af8a0ab52a530963df.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_592b3a788e6c42af8a0ab52a530963df.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAABAJECAAABAJECAAABAAoAAAACAFcAAAADAC0EAAAEAAEEAAABAC0EAAABAB8GAAABAKgFAAAB
AKgFAAABAJECCQBIBAEAEQBIBAYAGQBIBAoAKQBIBBAAMQBIBBAAOQBIBBAAQQBIBBAASQBIBBAA
UQBIBBAAWQBIBBAAYQBIBBAAaQBIBAYAoQBIBAYAwQBIBBUA0QBIBAYAkQB6AgYAkQCFAgYAcQBI
BBsAcQAtBCUAcQAkBSkAeQDcAi0AcQA/AzMAcQBOAzgAcQBGAwEA2QBIBBAAcQAbBj4AcQBsBT4A
kQBIBAYA4QBSBUIAkQA4BUkAmQBIBAYA8QBFAE8A8QAjBlYAqQBIBFwAyQBIBAYALgALAOMALgAT
AOwALgAbAAsBLgAjABQBLgArAD0BLgAzAD0BLgA7AD0BLgBDABQBLgBLAEMBLgBTAD0BLgBbAFoB
QwBjAKQBqQBzAAsByQBzAAsB4QB7AKQB4wBrAKQBAwABAAcABQAIAAcAAAAfAMcAAAApA8wAAAB5
A9AAAAA4A8wAAAA4BNQAAACnANkAAAB8Bd4AAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAgATAAsA
AgAUAA0AAQAVAA0AAgAWAA8ABIAAAAEAAAAAAAAAAAAAAAAAlwIAAAQAAAAAAAAAAAAAAGQAEgAA
AAAADgAAAAAAAAAAAAAAbQCyBQAAAAAOAAAAAAAAAAAAAABtAM8FAAAAAAQAAAAAAAAAAAAAAGQA
VwMAAAAAAAAAAAEAAACZBAAAAAAAAAA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAGdldF9NaWQA
ZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0
TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVl
AFNDXzU5MmIzYTc4OGU2YzQyYWY4YTBhYjUyYTUzMDk2M2RmAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAU3RyaW5nAEdldERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzU5MmIzYTc4
OGU2YzQyYWY4YTBhYjUyYTUzMDk2M2RmLmRsbABnZXRfTWlkX0lzTnVsbABzZXRfQ29sdW1uX0lz
TnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAHNldF9D
b2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1
cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZl
cgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTQ181OTJiM2E3ODhlNmM0MmFmOGEwYWI1MmE1MzA5NjNkZi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNTkyYjNhNzg4ZTZjNDJhZjhhMGFiNTJhNTMw
OTYzZGYuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0
X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0
X0Fzc2VtYmx5AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kA
bgBwAHUAdAAgADAAAHFTAEMAXwA1ADkAMgBiADMAYQA3ADgAOABlADYAYwA0ADIAYQBmADgAYQAw
AGEAYgA1ADIAYQA1ADMAMAA5ADYAMwBkAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAALS0BNoOBRpPowZBrdgrZ1UABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0J
IAMBEj0dCBJBAwYSPQMGHQgFIAERRQgEIAECCAUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkR
fQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJJAwYSVQMGElkDBhIg
BSABARIMBCAAEUUEIAEBAgkgBAEIDhI9EkEFIAEBEkkEAAASVQQAABJZBQABARJZBAAAEiADAAAB
BCgAEUUDKAACAygADgQIABJVBAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNTkyYjNhNzg4ZTZjNDJhZjhhMGFiNTJhNTMwOTYz
ZGYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABcMQAAAAAAAAAAAAB2MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaDEA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8ANQA5ADIAYgAzAGEANwA4ADgAZQA2AGMANAAyAGEAZgA4AGEAMABhAGIANQAyAGEA
NQAzADAAOQA2ADMAZABmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA1ADkAMgBiADMA
YQA3ADgAOABlADYAYwA0ADIAYQBmADgAYQAwAGEAYgA1ADIAYQA1ADMAMAA5ADYAMwBkAGYALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADUA
OQAyAGIAMwBhADcAOAA4AGUANgBjADQAMgBhAGYAOABhADAAYQBiADUAMgBhADUAMwAwADkANgAz
AGQAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA1ADkA
MgBiADMAYQA3ADgAOABlADYAYwA0ADIAYQBmADgAYQAwAGEAYgA1ADIAYQA1ADMAMAA5ADYAMwBk
AGYAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_592b3a788e6c42af8a0ab52a530963df</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">7B</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import NBP JSON into tmp Table\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import NBP JSON into tmp Table\Script Component.Inputs[Input 0].Columns[Mid]"
                      cachedDataType="decimal"
                      cachedName="Mid"
                      cachedScale="4"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[Mid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import NBP JSON into tmp Table\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Import NBP JSON into tmp Table\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import NBP JSON into tmp Table\Script Component.Outputs[Output 0].Columns[Column]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import NBP JSON into tmp Table\Script Component.Outputs[Output 0].Columns[Column]"
                      name="Column" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import NBP JSON into tmp Table\TMP table destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="TMP table destination"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."Exchange_rates_tmp"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import NBP JSON into tmp Table\TMP table destination.Connections[IDbConnection]"
                  connectionManagerID="{9B208692-FE8E-4766-821D-140E6590B735}:external"
                  connectionManagerRefId="Project.ConnectionManagers[SSIS_Scripts_ADO]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].Columns[EffectiveDate]"
                      cachedDataType="date"
                      cachedName="EffectiveDate"
                      externalMetadataColumnId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].ExternalColumns[Date]"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[EffectiveDate]" />
                    <inputColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].Columns[Mid]"
                      cachedDataType="decimal"
                      cachedName="Mid"
                      cachedScale="4"
                      externalMetadataColumnId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].ExternalColumns[Rate]"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[Mid]" />
                    <inputColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].Columns[No]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="No"
                      externalMetadataColumnId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].ExternalColumns[NBP_line_name]"
                      lineageId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data].Columns[No]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].ExternalColumns[Date]"
                      dataType="dbTimeStamp"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].ExternalColumns[Rate]"
                      dataType="numeric"
                      name="Rate"
                      precision="18"
                      scale="4" />
                    <externalMetadataColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input].ExternalColumns[NBP_line_name]"
                      dataType="wstr"
                      length="50"
                      name="NBP_line_name" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import NBP JSON into tmp Table\TMP table destination.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import NBP JSON into tmp Table\TMP table destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import NBP JSON into tmp Table\TMP table destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import NBP JSON into tmp Table\TMP table destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import NBP JSON into tmp Table.Paths[NBP_data]"
              endId="Package\Import NBP JSON into tmp Table\Script Component.Inputs[Input 0]"
              name="NBP_data"
              startId="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data.Outputs[NBP_data]" />
            <path
              refId="Package\Import NBP JSON into tmp Table.Paths[Output 0]"
              endId="Package\Import NBP JSON into tmp Table\TMP table destination.Inputs[ADO NET Destination Input]"
              name="Output 0"
              startId="Package\Import NBP JSON into tmp Table\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Merge data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ace6a5c3-d992-4656-b3ed-ecc174dfb23e}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Merge data"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 CTP2.1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9B208692-FE8E-4766-821D-140E6590B735}"
          SQLTask:SqlStatementSource="merge [dbo].[Exchange_rates] as Er&#xA; using [dbo].[Exchange_rates_tmp] as Mt&#xA;  on (Er.DATE = Mt.Date)&#xA; when matched and (Er.Rate != Mt.Rate or Er.NBP_line_name != Mt.NBP_line_name)&#xA;  then&#xA;   update&#xA;   set Er.Rate = Mt.Rate&#xA;    ,Er.NBP_line_name = Mt.NBP_line_name&#xA;    ,Er.Update_date = getdate()&#xA; when not matched by target&#xA;  then&#xA;   insert (&#xA;    [Date]&#xA;    ,[Rate]&#xA;    ,[NBP_line_name]&#xA;    )&#xA;   values (&#xA;    Mt.Date&#xA;    ,Mt.Rate&#xA;    ,Mt.NBP_line_name&#xA;    );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate tmp table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1ff640dd-a381-4d62-8151-2f97f222e0e2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate tmp table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 CTP2.1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9B208692-FE8E-4766-821D-140E6590B735}"
          SQLTask:SqlStatementSource="truncate table [dbo].[Exchange_rates_tmp]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{858395C8-9EC5-4317-BC51-16CA344AB4EA}"
      DTS:From="Package\Import NBP JSON into tmp Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Merge data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2BB492C3-5E4C-479F-8E24-BAC42FA9BD02}"
      DTS:From="Package\Truncate tmp table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Import NBP JSON into tmp Table" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="233.6,41.6"
          Id="Package\Import NBP JSON into tmp Table"
          TopLeft="6.07142858115998,107.711764714462" />
        <NodeLayout
          Size="131.2,41.6"
          Id="Package\Merge data"
          TopLeft="56.7,208.7" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\Truncate tmp table"
          TopLeft="38.3,5.49999999999995" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="122.58571429058,149.311764714462">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.3882352855379"
              Start="0,0"
              End="0,51.8882352855379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.8882352855379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="122.58571429058,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.6117647144622"
              Start="0,0"
              End="0,53.1117647144622">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.1117647144622" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import NBP JSON into tmp Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="180,41.6"
          Id="Package\Import NBP JSON into tmp Table\TMP table destination"
          TopLeft="38.7571432463977,308.370591058038" />
        <NodeLayout
          Size="200.8,41.6"
          Id="Package\Import NBP JSON into tmp Table\SC Import NBP JSON data"
          TopLeft="5.50000000000001,6.72352942892419" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Import NBP JSON into tmp Table\Script Component"
          TopLeft="170.857145766823,138.25882546844" />
        <EdgeLayout
          Id="Package\Import NBP JSON into tmp Table.Paths[NBP_data]"
          TopLeft="105.9,48.3235294289242">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="146.157145766823,89.9352960395154"
              Start="0,0"
              End="146.157145766823,82.4352960395154">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.9676480197577" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.9676480197577"
                    Point2="0,44.9676480197577"
                    Point3="4,44.9676480197577" />
                  <mssgle:LineSegment
                    End="142.157145766823,44.9676480197577" />
                  <mssgle:CubicBezierSegment
                    Point1="142.157145766823,44.9676480197577"
                    Point2="146.157145766823,44.9676480197577"
                    Point3="146.157145766823,48.9676480197577" />
                  <mssgle:LineSegment
                    End="146.157145766823,82.4352960395154" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import NBP JSON into tmp Table.Paths[Output 0]"
          TopLeft="252.057145766823,179.85882546844">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-123.300002520425,128.511765589599"
              Start="0,0"
              End="-123.300002520425,121.011765589599">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.2558827947993" />
                  <mssgle:CubicBezierSegment
                    Point1="0,60.2558827947993"
                    Point2="0,64.2558827947993"
                    Point3="-4,64.2558827947993" />
                  <mssgle:LineSegment
                    End="-119.300002520425,64.2558827947993" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.300002520425,64.2558827947993"
                    Point2="-123.300002520425,64.2558827947993"
                    Point3="-123.300002520425,68.2558827947993" />
                  <mssgle:LineSegment
                    End="-123.300002520425,121.011765589599" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import NBP JSON into tmp Table\TMP table destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>